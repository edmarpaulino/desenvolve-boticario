O que acontece quando usamos uma variável do tipo var antes da sua declaração?
No JS a variável do tipo var sofre o efeito hoisting, ou seja, mesmo que sua
declaração tenha sido após a sua utilização, quando o programa for executado,
antes da execução o JS vai ler o arquivo todo e vai declarar as variáveis, ou
seja, ela já vai estar declarada quando você for utiliza-la mesmo que a sua
declaração tenha sido realizada após o seu uso.

O que acontece quando atribuímos valor a uma variável que não foi declarada?
O JS cria ela automáticamente para nós, mas isso não é uma boa prática, sempre
declare a váriavel antes do seu uso.

Quais as diferenças entre var, let e const?
Antes da versão de 2015 só existia o tipo var, que é um tipo mais solto, onde
ela só tem 2 escopos possíveis, global ou de função, ela também não gera erros
caso declaremos ela após seu uso, e também podemos redeclarar a mesma variável
várias vezes sem ocorrer erros, já a let e const elas possuem escopo global,
local, de função e de bloco, nelas precisamos declaram a variável antes de seu
uso e não podemos redeclarar a mesma variável dentro do mesmo escopo, a let é
igual a var no sentido de seu valor poder ser alterado, já a const é uma
variável constante na qual seu valor precisar ser definido no momento da
declaração e seu valor é constante durante toda a execução do programa.

O que é o conceito de truthy e falsy?
Esse conceito é quando tipos não booleanos são usados como booleanos, ou seja o
número 1 é considerado com true e o 0 como false, uma string vazia como false e
uma string não vazia como true, ou null como false.

Qual o retorno de console.log(typeof null) e o porque desse retorno?
O retorno é um objeto, em JS quando a linguagem foi desenvolvida o null foi
feito como um objeto, não foi criado um tipo só para null após porque muitos
sistemas quebrariam.

Quando ocorre conversão implícita no JS?
Ocorre quando tentamos realizar soma com uma string e um número, ou quando
tentamos comparar de maneira simples os valores de duas variáveis de tipos
diferentes, exemplo: ("456" == 456) = true

Como converter uma string para um número usando o operador de adição '+'?
Apesar de não ser comum e de também não ser uma boa prática, o JS nos dá essa
opção, então podemos  fazer essa conversão utilizando o sinal de adição '+' na
frente da string que queremos converter em número, exemplo:
console.log(+ "456" * + "2")
